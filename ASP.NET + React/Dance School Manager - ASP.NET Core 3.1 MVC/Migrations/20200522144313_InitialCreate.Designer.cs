// <auto-generated />
using System;
using DanceSchool_10._05_ASP.NET_MVC.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DanceSchool_10._05_ASP.NET_MVC.Migrations
{
    [DbContext(typeof(mydbContext))]
    [Migration("20200522144313_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("DanceSchool_10._05_ASP.NET_MVC.Models.Class", b =>
                {
                    b.Property<int>("ClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("class_id")
                        .HasColumnType("int");

                    b.Property<int?>("ClassroomId")
                        .HasColumnName("classroom_id")
                        .HasColumnType("int");

                    b.Property<string>("DancestyleId")
                        .IsRequired()
                        .HasColumnName("dancestyle_id")
                        .HasColumnType("varchar(45)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<int>("GroupId")
                        .HasColumnName("group_id")
                        .HasColumnType("int");

                    b.Property<int>("HourId")
                        .HasColumnName("hour_id")
                        .HasColumnType("int");

                    b.Property<int>("WeekdayId")
                        .HasColumnName("weekday_id")
                        .HasColumnType("int");

                    b.HasKey("ClassId");

                    b.HasIndex("GroupId")
                        .HasName("fk_Class_Group1_idx");

                    b.HasIndex("HourId")
                        .HasName("hour_id_idx");

                    b.HasIndex("WeekdayId")
                        .IsUnique()
                        .HasName("weekday_id_UNIQUE");

                    b.ToTable("class");
                });

            modelBuilder.Entity("DanceSchool_10._05_ASP.NET_MVC.Models.DanceStyle", b =>
                {
                    b.Property<int>("DancestyleId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dancestyle_id")
                        .HasColumnType("int");

                    b.Property<string>("DancestyleName")
                        .IsRequired()
                        .HasColumnName("dancestyle_name")
                        .HasColumnType("varchar(45)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.HasKey("DancestyleId");
                   

                    b.HasIndex("DancestyleId")
                        .IsUnique()
                        .HasName("dancestyle_id_UNIQUE");

                    b.ToTable("dance_style");
                });

            modelBuilder.Entity("DanceSchool_10._05_ASP.NET_MVC.Models.Dancer", b =>
                {
                    b.Property<int>("DancerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dancer_id")
                        .HasColumnType("int");

                    b.Property<int>("FunctionId")
                        .HasColumnName("function_id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("varchar(45)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnName("status")
                        .HasColumnType("varchar(35)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnName("surname")
                        .HasColumnType("varchar(45)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.HasKey("DancerId");

                    b.HasIndex("DancerId")
                        .IsUnique()
                        .HasName("dancer_id_UNIQUE");

                    b.HasIndex("FunctionId")
                        .HasName("fk_Dancer_Function1_idx");

                    b.ToTable("dancer");
                });

            modelBuilder.Entity("DanceSchool_10._05_ASP.NET_MVC.Models.Efmigrationshistory", b =>
                {
                    b.Property<string>("MigrationId")
                        .HasColumnType("varchar(95)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("ProductVersion")
                        .IsRequired()
                        .HasColumnType("varchar(32)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.HasKey("MigrationId")
                        .HasName("PRIMARY");

                    b.ToTable("__efmigrationshistory");
                });

            modelBuilder.Entity("DanceSchool_10._05_ASP.NET_MVC.Models.Function", b =>
                {
                    b.Property<int>("FunctionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("function_id")
                        .HasColumnType("int");

                    b.Property<string>("FunctionName")
                        .HasColumnName("function_name")
                        .HasColumnType("varchar(45)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.HasKey("FunctionId");

                    b.ToTable("function");
                });

            modelBuilder.Entity("DanceSchool_10._05_ASP.NET_MVC.Models.Group", b =>
                {
                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("group_id")
                        .HasColumnType("int");

                    b.Property<int>("DancestyleId")
                        .HasColumnName("dancestyle_id")
                        .HasColumnType("int");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnName("group_name")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<int>("SupervisorId")
                        .HasColumnName("Supervisor_id")
                        .HasColumnType("int");

                    b.HasKey("GroupId");

                    b.HasIndex("DancestyleId")
                        .HasName("fk_Group_Dance_style1_idx");

                    b.HasIndex("GroupId")
                        .IsUnique()
                        .HasName("group_id_UNIQUE");

                    b.HasIndex("GroupName")
                        .IsUnique()
                        .HasName("group_name_UNIQUE");

                    b.ToTable("group");
                });

            modelBuilder.Entity("DanceSchool_10._05_ASP.NET_MVC.Models.GroupHasDancer", b =>
                {
                    b.Property<int>("GroupGroupId")
                        .HasColumnName("Group_group_id")
                        .HasColumnType("int");

                    b.Property<int>("DancerDancerId")
                        .HasColumnName("Dancer_dancer_id")
                        .HasColumnType("int");

                    b.HasKey("GroupGroupId", "DancerDancerId")
                        .HasName("PRIMARY");

                    b.HasIndex("DancerDancerId")
                        .HasName("fk_Group_has_Dancer_Dancer1_idx");

                    b.HasIndex("GroupGroupId")
                        .HasName("fk_Group_has_Dancer_Group1_idx");

                    b.ToTable("group_has_dancer");
                });

            modelBuilder.Entity("DanceSchool_10._05_ASP.NET_MVC.Models.Hour", b =>
                {
                    b.Property<short>("HourId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("hour_id")
                        .HasColumnType("smallint");

                    b.Property<TimeSpan?>("HourEnd")
                        .HasColumnName("hour_end")
                        .HasColumnType("time");

                    b.Property<TimeSpan?>("HourStart")
                        .HasColumnName("hour_start")
                        .HasColumnType("time");

                    b.HasKey("HourId");

                    b.ToTable("hours");
                });

            modelBuilder.Entity("DanceSchool_10._05_ASP.NET_MVC.Models.TurnamentGroup", b =>
                {
                    b.Property<string>("Aword")
                        .HasColumnName("aword")
                        .HasColumnType("varchar(45)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("City")
                        .HasColumnName("city")
                        .HasColumnType("varchar(45)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<DateTime?>("Data")
                        .HasColumnName("data")
                        .HasColumnType("date");

                    b.Property<int>("GroupId")
                        .HasColumnName("group_id")
                        .HasColumnType("int");

                    b.Property<int>("Place")
                        .HasColumnName("place")
                        .HasColumnType("int");

                    b.Property<int>("TurnamentGroupId")
                        .HasColumnName("turnament_group_id")
                        .HasColumnType("int");

                    b.Property<string>("TurnamentName")
                        .IsRequired()
                        .HasColumnName("turnament_name")
                        .HasColumnType("varchar(45)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.ToTable("turnament_group");
                });

            modelBuilder.Entity("DanceSchool_10._05_ASP.NET_MVC.Models.TurnamentSolo", b =>
                {
                    b.Property<int>("TurnamentSoloId")
                        .HasColumnName("turnament_solo_id")
                        .HasColumnType("int");

                    b.Property<int>("DancerId")
                        .HasColumnName("dancer_id")
                        .HasColumnType("int");

                    b.Property<string>("Aword")
                        .HasColumnName("aword")
                        .HasColumnType("varchar(45)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<string>("City")
                        .HasColumnName("city")
                        .HasColumnType("varchar(45)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.Property<DateTime?>("Data")
                        .HasColumnName("data")
                        .HasColumnType("date");

                    b.Property<int?>("Place")
                        .HasColumnName("place")
                        .HasColumnType("int");

                    b.Property<string>("TurnamentName")
                        .HasColumnName("turnament_name")
                        .HasColumnType("varchar(45)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.HasKey("TurnamentSoloId", "DancerId")
                        .HasName("PRIMARY");

                    b.ToTable("turnament_solo");
                });

            modelBuilder.Entity("DanceSchool_10._05_ASP.NET_MVC.Models.Weekday", b =>
                {
                    b.Property<int?>("DayId")
                        .HasColumnName("day_id")
                        .HasColumnType("int");

                    b.Property<string>("DayName")
                        .HasColumnName("day_name")
                        .HasColumnType("varchar(45)")
                        .HasAnnotation("MySql:CharSet", "utf8")
                        .HasAnnotation("MySql:Collation", "utf8_general_ci");

                    b.HasIndex("DayId")
                        .HasName("day_id_idx");

                    b.ToTable("weekday");
                });

            modelBuilder.Entity("DanceSchool_10._05_ASP.NET_MVC.Models.Class", b =>
                {
                    b.HasOne("DanceSchool_10._05_ASP.NET_MVC.Models.Group", "Group")
                        .WithMany("Classes")
                        .HasForeignKey("GroupId")
                        .HasConstraintName("fk_Class_Group1")
                        .IsRequired();
                });

            modelBuilder.Entity("DanceSchool_10._05_ASP.NET_MVC.Models.Dancer", b =>
                {
                    b.HasOne("DanceSchool_10._05_ASP.NET_MVC.Models.Function", "Function")
                        .WithMany("Dancers")
                        .HasForeignKey("FunctionId")
                        .HasConstraintName("fk_Dancer_Function1")
                        .IsRequired();
                });

            modelBuilder.Entity("DanceSchool_10._05_ASP.NET_MVC.Models.Group", b =>
                {
                    b.HasOne("DanceSchool_10._05_ASP.NET_MVC.Models.DanceStyle", "Dancestyle")
                        .WithMany("Groups")
                        .HasForeignKey("DancestyleId")
                        .HasConstraintName("fk_Group_Dance_style1")
                        .IsRequired();
                });

            modelBuilder.Entity("DanceSchool_10._05_ASP.NET_MVC.Models.GroupHasDancer", b =>
                {
                    b.HasOne("DanceSchool_10._05_ASP.NET_MVC.Models.Dancer", "DancerDancer")
                        .WithMany("GroupHasDancers")
                        .HasForeignKey("DancerDancerId")
                        .HasConstraintName("fk_Group_has_Dancer_Dancer1")
                        .IsRequired();

                    b.HasOne("DanceSchool_10._05_ASP.NET_MVC.Models.Group", "GroupGroup")
                        .WithMany("GroupHasDancers")
                        .HasForeignKey("GroupGroupId")
                        .HasConstraintName("fk_Group_has_Dancer_Group1")
                        .IsRequired();
                });

            modelBuilder.Entity("DanceSchool_10._05_ASP.NET_MVC.Models.Weekday", b =>
                {
                    b.HasOne("DanceSchool_10._05_ASP.NET_MVC.Models.Class", "Day")
                        .WithMany()
                        .HasForeignKey("DayId")
                        .HasConstraintName("day_id")
                        .HasPrincipalKey("WeekdayId");
                });
#pragma warning restore 612, 618
        }
    }
}
