version: '3'
services:
  rabbitmqsubscriberdirectexchange:
    build:
      context: .
      dockerfile: RabbitmqSubscriberDirectExchange/Dockerfile
    ports:
      - 8081:80
    depends_on:
      - rabbitmq
    networks:
      - mynetwork
  rabbitmqsubscriberfanoutexchange1:
    build:
      context: .
      dockerfile: RabbitmqSubscriberFanoutExchange/Dockerfile
    ports:
      - 8089:80
    depends_on:
      - rabbitmq
    environment:
      - QUEUE_NAME=consumer1
    networks:
      - mynetwork
  rabbitmqsubscriberfanoutexchange2:
    build:
      context: .
      dockerfile: RabbitmqSubscriberFanoutExchange/Dockerfile
    ports:
      - 8090:80
    depends_on:
      - rabbitmq
    environment:
      - QUEUE_NAME=consumer2
    networks:
      - mynetwork
  rabbitmqsubscriberfanoutexchange3:
    build:
      context: .
      dockerfile: RabbitmqSubscriberFanoutExchange/Dockerfile
    ports:
      - 8091:80
    depends_on:
      - rabbitmq
    environment:
      - QUEUE_NAME=consumer3
    networks:
      - mynetwork
  rabbitmqsubscriberfanoutexchange4:
    build:
      context: .
      dockerfile: RabbitmqSubscriberFanoutExchange/Dockerfile
    ports:
      - 8092:80
    depends_on:
      - rabbitmq
    environment:
      - QUEUE_NAME=consumer4
    networks:
      - mynetwork
  rabbitmqsubscriberfanoutexchange5:
    build:
      context: .
      dockerfile: RabbitmqSubscriberFanoutExchange/Dockerfile
    ports:
      - 8093:80
    depends_on:
      - rabbitmq
    environment:
      - QUEUE_NAME=consumer5
    networks:
      - mynetwork     
  publisher:
    build:
      context: .
      dockerfile: Publisher/Dockerfile
    ports:
      - 8080:80
    depends_on:
      - rabbitmq
    networks:
      - mynetwork
  restclient1:
    build:
      context: .
      dockerfile: RestClient/Dockerfile
    ports:
      - 8082:80
    networks:
      - mynetwork
  restclient2:
    build:
      context: .
      dockerfile: RestClient/Dockerfile
    ports:
      - 8094:80
    networks:
      - mynetwork
  restclient3:
    build:
      context: .
      dockerfile: RestClient/Dockerfile
    ports:
      - 8095:80
    networks:
      - mynetwork
  restclient4:
    build:
      context: .
      dockerfile: RestClient/Dockerfile
    ports:
      - 8096:80
    networks:
      - mynetwork
  restclient5:
    build:
      context: .
      dockerfile: RestClient/Dockerfile
    ports:
      - 8097:80
    networks:
      - mynetwork 
  azureservicebussubscriberqueue:
    build:
      context: .
      dockerfile: AzureServiceBusSubscriberQueue/Dockerfile
    ports:
      - 8083:80
    networks:
      - mynetwork
  azureservicebussubscribertopic1:
    build:
      context: .
      dockerfile: AzureServiceBusSubscriberTopic/Dockerfile
    ports:
      - 8084:80
    environment:
      - SUBSCRIPTION_NAME=sub1
    networks:
      - mynetwork
  azureservicebussubscribertopic2:
    build:
      context: .
      dockerfile: AzureServiceBusSubscriberTopic/Dockerfile
    ports:
      - 8085:80
    environment:
      - SUBSCRIPTION_NAME=sub2
    networks:
      - mynetwork
  azureservicebussubscribertopic3:
    build:
      context: .
      dockerfile: AzureServiceBusSubscriberTopic/Dockerfile
    ports:
      - 8086:80
    environment:
      - SUBSCRIPTION_NAME=sub3
    networks:
      - mynetwork
  azureservicebussubscribertopic4:
    build:
      context: .
      dockerfile: AzureServiceBusSubscriberTopic/Dockerfile
    ports:
      - 8087:80
    environment:
      - SUBSCRIPTION_NAME=sub4
    networks:
      - mynetwork
  azureservicebussubscribertopic5:
    build:
      context: .
      dockerfile: AzureServiceBusSubscriberTopic/Dockerfile
    ports:
      - 8088:80
    environment:
      - SUBSCRIPTION_NAME=sub5
    networks:
      - mynetwork
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - mynetwork

networks:
  mynetwork:
    driver: bridge
